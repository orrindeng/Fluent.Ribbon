<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Fluent="clr-namespace:Fluent"
                    xmlns:converters="clr-namespace:Fluent.Converters"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <Style x:Key="Fluent.Ribbon.Styles.RibbonComboButton"
           TargetType="{x:Type Fluent:ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Fluent.Ribbon.Styles.ControlStyleEmptyFocus}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelText}" />
        <Setter Property="Height" Value="68" />
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.RibbonComboButton}" />
        <Setter Property="Width" Value="Auto" />
    </Style>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.RibbonComboButton"
                     TargetType="{x:Type Fluent:ToggleButton}">
        <Border x:Name="border"
                Height="Auto"
                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                Background="{DynamicResource Fluent.Ribbon.Brushes.White}"
                BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.Border}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid Height="Auto"
                  HorizontalAlignment="Right">
                <Path x:Name="path"
                      Width="7"
                      Height="5"
                      Margin="3 0 3 0"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      Fill="{DynamicResource Fluent.Ribbon.Brushes.LabelText}"
                      IsHitTestVisible="False"
                      Stretch="Fill" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="path" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="border" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Border}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Fluent.Ribbon.Templates.RibbonCombobox"
                     TargetType="{x:Type Fluent:ComboBox}">
        <ControlTemplate.Resources>
            <ResourceDictionary>
                <Style x:Key="{x:Type ScrollBar}"
                       TargetType="{x:Type ScrollBar}"
                       BasedOn="{StaticResource Fluent.Ribbon.Styles.ScrollBarWhite}" />
                <Style x:Key="{x:Type ScrollViewer}"
                       TargetType="{x:Type ScrollViewer}"
                       BasedOn="{StaticResource Fluent.Ribbon.Styles.ScrollViewer}" />
            </ResourceDictionary>
        </ControlTemplate.Resources>

        <Grid Width="Auto"
              Height="Auto"
              Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel x:Name="headerAndIconPanel"
                        Margin="0 0 4 0"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal">
                <Fluent:IconPresenter x:Name="iconImage"
                                      Margin="3 0 0 0"
                                      VerticalAlignment="Center"
                                      IconSize="{Binding Path=(Fluent:RibbonProperties.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                      MediumIcon="{Binding MediumIcon, RelativeSource={RelativeSource TemplatedParent}}"
                                      SmallIcon="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" />

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="{Binding Path=(Fluent:RibbonGroupBoxWrapPanel.SharedSizeGroupName), RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid.ColumnDefinitions>

                    <ContentControl x:Name="PART_HeaderContentHost"
                                    Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                    Focusable="False" />
                </Grid>
            </StackPanel>

            <Border x:Name="PART_ContentBorder"
                    Grid.Column="1"
                    Width="{Binding Path=(Fluent:InputControlProperties.InputWidth), RelativeSource={RelativeSource AncestorType=Fluent:ComboBox}}"
                    Height="{Binding Path=(Fluent:InputControlProperties.InputHeight), RelativeSource={RelativeSource AncestorType=Fluent:ComboBox}}"
                    MinWidth="{Binding Path=(Fluent:InputControlProperties.InputMinWidth), RelativeSource={RelativeSource AncestorType=Fluent:ComboBox}}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Background="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Background}"
                    BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Border}"
                    BorderThickness="1"
                    d:LayoutOverrides="GridBox">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <Fluent:ToggleButton x:Name="PART_ToggleButton"
                                         Style="{DynamicResource Fluent.Ribbon.Styles.RibbonComboButton}"
                                         Grid.ColumnSpan="2"
                                         Height="Auto"
                                         MinHeight="0"
                                         Margin="0"
                                         VerticalAlignment="Stretch"
                                         BorderThickness="0"
                                         CanAddToQuickAccessToolBar="False"
                                         ClickMode="Press"
                                         Focusable="False"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                         IsDefinitive="False" />
                    <ContentPresenter x:Name="PART_ContentSite"
                                      Margin="3 0 3 0"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      IsHitTestVisible="False" />
                    <Image x:Name="PART_SelectedImage"
                           Width="Auto"
                           Height="Auto"
                           Margin="0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           IsHitTestVisible="False"
                           Stretch="None"
                           Visibility="Collapsed" />
                    <TextBox x:Name="PART_EditableTextBox"
                             Style="{x:Null}"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                             Background="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Background}"
                             BorderThickness="0"
                             CaretBrush="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Caret}"
                             Focusable="True"
                             Foreground="{TemplateBinding Foreground}"
                             IsReadOnly="{TemplateBinding IsReadOnly}"
                             SelectionBrush="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Selection}"
                             TextWrapping="NoWrap"
                             Visibility="Hidden" />
                </Grid>
            </Border>

            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   Margin="0 0 -4 0"
                   VerticalAlignment="Top"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   Placement="Bottom"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <Popup.Resources>
                    <ResourceDictionary>
                        <Style x:Key="{x:Type ScrollBar}"
                               TargetType="{x:Type ScrollBar}"
                               BasedOn="{StaticResource Fluent.Ribbon.Styles.ScrollBarWhite}" />
                    </ResourceDictionary>
                </Popup.Resources>
                <Fluent:ResizeableContentControl x:Name="PART_PopupContentControl"
                                                 MinWidth="{TemplateBinding ActualWidth}"
                                                 MinHeight="{TemplateBinding ActualHeight}"
                                                 MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                 IsEnabled="{TemplateBinding IsEnabled}"
                                                 ResizeMode="{TemplateBinding ResizeMode}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ContentPresenter Grid.Row="0"
                                          ContentSource="TopPopupContent" />

                        <ScrollViewer x:Name="PART_ScrollViewer"
                                      Grid.Row="1"
                                      Margin="1"
                                      VerticalAlignment="Stretch"
                                      Background="{DynamicResource Fluent.Ribbon.Brushes.White}"
                                      BorderBrush="{DynamicResource Fluent.Ribbon.Brushes.Control.Border}"
                                      BorderThickness="0 0 0 1"
                                      Focusable="False"
                                      KeyboardNavigation.DirectionalNavigation="None"
                                      SnapsToDevicePixels="True">
                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>

                        <ContentPresenter x:Name="menuPresenter"
                                          Grid.Row="2"
                                          VerticalAlignment="Top"
                                          ContentSource="Menu"
                                          KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Grid>
                </Fluent:ResizeableContentControl>
            </Popup>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="Menu" Value="{x:Null}">
                <Setter TargetName="PART_ScrollViewer" Property="BorderThickness" Value="0" />
            </Trigger>

            <Trigger SourceName="iconImage" Property="OptimalIcon" Value="{x:Null}">
                <Setter TargetName="iconImage" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="Size" Value="Small">
                <Setter TargetName="PART_ContentBorder" Property="HorizontalAlignment" Value="Stretch" />
                <Setter TargetName="headerAndIconPanel" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Size" Value="Middle">
                <Setter TargetName="PART_ContentBorder" Property="HorizontalAlignment" Value="Stretch" />
                <Setter TargetName="PART_HeaderContentHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Fluent:InputControlProperties.InputWidth" Value="NaN">
                <Setter TargetName="PART_ContentBorder" Property="HorizontalAlignment" Value="Stretch" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.Background}" />
                <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.Border}" />
                <Setter TargetName="PART_EditableTextBox" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.Disabled.Background}" />
                <Setter TargetName="PART_EditableTextBox" Property="IsEnabled" Value="False" />
                <Setter TargetName="PART_HeaderContentHost" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Border}" />
                <Setter TargetName="PART_EditableTextBox" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
            </Trigger>

            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="PART_ContentBorder" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}" />
                <Setter TargetName="PART_ContentBorder" Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Border}" />
                <Setter TargetName="PART_EditableTextBox" Property="Background" Value="{DynamicResource Fluent.Ribbon.Brushes.TextBox.MouseOver.Background}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter TargetName="PART_ContentSite" Property="Visibility" Value="Hidden" />
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="Fluent.Ribbon.DataTemplates.ComboBox.Header">
        <TextBlock Margin="5 0 0 0"
                   VerticalAlignment="Center"
                   Text="{Binding}"
                   TextWrapping="Wrap" />
    </DataTemplate>

    <Style TargetType="{x:Type Fluent:ComboBox}">
        <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource Fluent.Ribbon.Styles.ControlStyleEmptyFocus}" />
        <Setter Property="Foreground" Value="{DynamicResource Fluent.Ribbon.Brushes.LabelText}" />
        <Setter Property="HeaderTemplate" Value="{DynamicResource Fluent.Ribbon.DataTemplates.ComboBox.Header}" />
        <Setter Property="Height" Value="22" />
        <Setter Property="IsEditable" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template" Value="{DynamicResource Fluent.Ribbon.Templates.RibbonCombobox}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="ItemContainerStyleSelector" Value="{x:Null}">
                <Setter Property="ItemContainerStyle" Value="{DynamicResource Fluent.Ribbon.Styles.ComboBoxItem}" />
            </Trigger>
            <Trigger Property="IsSimplified" Value="True">
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Medium" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="Padding" Value="6 0" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSimplified" Value="True" />
                    <Condition Property="Size" Value="Small" />
                </MultiTrigger.Conditions>
                <Setter Property="Fluent:RibbonProperties.IconSize" Value="Small" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>